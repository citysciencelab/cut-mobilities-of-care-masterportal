version: '3.9'
services:
    # Postgres database
    postgres-re2:
        image: postgres:10.4
        volumes:
            - ./postgresdata:/var/lib/postgresql/data
            - ./mobility-backend/db/setup/dbinit.sql:/docker-entrypoint-initdb.d/dbinit.sql
        restart: always
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: hECJFh7*th
            POSTGRES_DB: mobility-db
        networks:
            - re2-api

    # Expernal API to retrieve aggregated data of the gathered mobility data
    external-mobility-backend-re2:
        build:
            context: .
            dockerfile: mobility-backend/Dockerfile
        volumes:
            - ./audio_files:/usr/app/mobility-backend/audio_files
            - ./image_files:/usr/app/mobility-backend/image_files
        restart: always
        depends_on:
            - postgres-re2
        environment:
            DB_HOST: postgres-re2
            DB_NAME: mobility-db
            DB_USER: postgres
            DB_PASS: hECJFh7*th
            DB_PORT: 5432
            DB_MAX_CONNECTIONS: 10
            API_CORS_ORIGINS: https://re2.cut.hcu-hamburg.de
            API_PORT: 8080
            API_VARIANT: external
        networks:
            - proxy
            - re2-api
        labels:
            - traefik.enable=true
            - traefik.http.routers.external-mobility-backend-re2.entrypoints=https
            - traefik.http.routers.external-mobility-backend-re2.rule=Host(`re2-api.cut.hcu-hamburg.de`)
            - traefik.http.routers.external-mobility-backend-re2.tls=true
            - traefik.http.routers.external-mobility-backend-re2.tls.certresolver=lets-encr
            - traefik.http.services.external-mobility-backend-re2.loadbalancer.server.port=8080
        #ports:
        #  - '8080:8080'

    # Internal API to retrieve detailed information about the mobility data
    internal-mobility-backend-re2:
        build:
            context: .
            dockerfile: mobility-backend/Dockerfile
        volumes:
            - ./audio_files:/usr/app/mobility-backend/audio_files
            - ./image_files:/usr/app/mobility-backend/image_files
        restart: always
        depends_on:
            - postgres-re2
        networks:
            - proxy
            - re2-api
        environment:
            DB_HOST: postgres-re2
            DB_NAME: mobility-db
            DB_USER: postgres
            DB_PASS: hECJFh7*th
            DB_PORT: 5432
            DB_MAX_CONNECTIONS: 10
            API_CORS_ORIGINS: https://re2.cut.hcu-hamburg.de, /\.hcu-hamburg\.de$/, https://localhost:9001, /\mobility-results\/$/
            API_PORT: 8081
            API_VARIANT: internal
        labels:
            - traefik.enable=true
            - traefik.http.routers.internal-mobility-backend-re2.entrypoints=https
            - traefik.http.routers.internal-mobility-backend-re2.rule=Host(`re2-api-internal.cut.hcu-hamburg.de`)
            - traefik.http.routers.internal-mobility-backend-re2.tls=true
            - traefik.http.routers.internal-mobility-backend-re2.tls.certresolver=lets-encr
            - traefik.http.services.internal-mobility-backend-re2.loadbalancer.server.port=8081
            - traefik.http.middlewares.re2-internal-auth.basicauth.users=csl:$$2a$$12$$crU51VSBJ1R4yC8y/TWCBua6BNhOxy9WRqSEtMIzbTMGKZr0cTkCC
            - traefik.http.routers.internal-mobility-backend-re2.middlewares=re2-internal-auth@docker

        #ports:
        #  - '8081:8081'

    # Frontend incl. Masterportal configuration and both the storytelling and the data collection add-on
    mobility-frontend-re2:
        build:
            context: .
            dockerfile: Dockerfile
            args:
                API_BASE_URL: https://re2-api.cut.hcu-hamburg.de
                TEST_ENV: "false"
        networks:
            - proxy
        labels:
            - traefik.enable=true
            - traefik.http.routers.mobility-frontend-re2.entrypoints=https
            - traefik.http.routers.mobility-frontend-re2.rule=Host(`re2.cut.hcu-hamburg.de`)
            - traefik.http.routers.mobility-frontend-re2.tls=true
            - traefik.http.routers.mobility-frontend-re2.tls.certresolver=lets-encr
        #ports:
        #  - '80:80'

networks:
    proxy:
        external: true
    re2-api:
        external: true
